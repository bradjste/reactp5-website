{"version":3,"sources":["img/bsSplashCard.png","P5Sketch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","randHue","Math","floor","random","phase","P5Sketch","props","setup","p5","canvasParentRef","createCanvas","windowWidth","windowHeight","parent","colorMode","HSB","background","initFil","frameRate","noStroke","initRules","initHues","draw","setRules","currRuleSelect","boxNum","state","currHue","currRow","fil","nextRow","ux","uy","rowNum","j","i","hues","fill","sin","sats","rect","rules","calcNil","TWO_PI","setState","firstFil","length","ruleArr","onWindowResize","resizeCanvas","prevState","nil","bind","this","windowResized","Component","App","changeBlur","changePattern","setInterval","e","isBlur","document","getElementById","style","filter","hueArr","satArr","id","className","onMouseMove","handleMouseMove","src","splashCard","onClick","alt","Boolean","window","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.83a239ce.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bsSplashCard.5267e537.png\";","import React, {Component} from 'react'\r\nimport Sketch from 'react-p5'\r\n\r\nlet randHue = Math.floor(Math.random()*360)\r\n// let stretch = Math.random()*2-1\r\nlet phase = 0;\r\nlet circBool = false;\r\nclass P5Sketch extends Component {\r\n\r\n  \r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      rules: this.props.rules,\r\n      hues: this.props.hues,\r\n      sats: this.props.sats,\r\n      fil: [],\r\n      boxNum: 500\r\n    }\r\n    this.initFil = this.initFil.bind(this)\r\n    this.initRules = this.initRules.bind(this)\r\n    this.calcNil = this.calcNil.bind(this)\r\n  }\r\n\r\n  setup = (p5,canvasParentRef) => {\r\n    let canvas = p5.createCanvas(p5.windowWidth,p5.windowHeight)\r\n    canvas.parent(canvasParentRef);\r\n    p5.colorMode(p5.HSB,360,100,100)\r\n    p5.background(360)\r\n    this.initFil()\r\n    p5.frameRate(20)\r\n    p5.noStroke()\r\n    this.initRules()\r\n    this.initHues()\r\n    p5.background(0)\r\n  }\r\n\r\n  draw = p5 => {\r\n    this.setRules()\r\n    let currRuleSelect = 0\r\n    const boxNum = this.state.boxNum\r\n    let currHue = 0;\r\n    let currRow = [...this.state.fil]\r\n    let nextRow = []\r\n    const ux = p5.windowWidth / boxNum\r\n    const uy = Math.floor(ux)\r\n    const rowNum = p5.windowHeight / uy\r\n    for (let j = 0; j < rowNum; j++) {    \r\n      for (let i = 0; i < boxNum; i++) {\r\n        if (i===0) {\r\n          currRuleSelect = 4*currRow[boxNum-1]+2*currRow[0]+currRow[1]\r\n        } else if (i === boxNum-1) {\r\n          currRuleSelect = 4*currRow[i-1]+2*currRow[i]+currRow[0]\r\n        } else {\r\n          currRuleSelect = 4*currRow[i-1]+2*currRow[i]+currRow[i+1]\r\n        }\r\n        currHue = Math.floor(this.state.hues[currRuleSelect])\r\n        if (!currRow[i]) {\r\n          p5.fill((100*(i/(p5.windowWidth/ux))+(100*(j/(p5.windowHeight/uy))+currHue+randHue+100*Math.sin(phase)))%360,this.state.sats[currRuleSelect]-40*(j/(p5.windowHeight/uy)),100)\r\n        } else {\r\n          p5.fill((currHue+randHue)%360,100,0)\r\n        }\r\n        \r\n        if (circBool ? p5.dist(p5.mouseX/1.1,p5.mouseY/1.1,ux*i,uy*j) < p5.windowWidth*0.15 : true) {\r\n          // if (p5.dist(p5.windowWidth*0.5,p5.windowHeight*0.5,ux*i,uy*j) < p5.windowHeight*(p5.mouseY/p5.windowHeight)) {\r\n          p5.rect(ux*(i-0.5),uy*(j+0.8),ux+2,uy+2)\r\n\r\n        }\r\n          nextRow[i] = this.state.rules[currRuleSelect]\r\n        \r\n        \r\n      }\r\n      \r\n      currRow = [...nextRow]\r\n    }\r\n    this.calcNil()\r\n    // p5.fill(360*(phase/6.24),100,100)\r\n    // p5.ellipse(p5.windowWidth*0.1 + 50*Math.cos(phase),p5.windowHeight*0.8+ 50*Math.sin(phase),20,20)\r\n    phase+= p5.TWO_PI*0.00511111;\r\n    if (phase > p5.TWO_PI) {\r\n      phase = 0;\r\n    }\r\n  }\r\n\r\n  initFil = () => {\r\n    this.setState(\r\n      () => {\r\n        let firstFil = []\r\n        // const spaceship = [0,0,0,1,0,0,1,1,0,1,1,1,1,1]\r\n        for (let i = 0; i < this.state.boxNum; i++) {\r\n          firstFil[i] = 0\r\n          //  firstFil[i] = Math.floor(Math.random()*2)\r\n          // firstFil[i] = spaceship[i%spaceship.length]\r\n        }\r\n        firstFil[Math.floor(firstFil.length/2)] = 1\r\n        return(\r\n          {\r\n            fil: firstFil\r\n          }\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  initHues = () => {\r\n    this.setState(\r\n      () => {\r\n        let hues = []\r\n        for (let i = 0; i < 8; i++) {\r\n         // hues[i] = 0\r\n         hues[i] = (Math.random()*360)\r\n          // firstFil[i] = spaceship[i%spaceship.length]\r\n        }\r\n        //hues[Math.floor(hues.length/2)] = 1\r\n        return(\r\n          {\r\n            hues: hues\r\n          }\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  setRules = () => {\r\n    this.setState(() => {\r\n      return(\r\n        {\r\n          rules:this.props.rules,\r\n          hues:this.props.hues,\r\n          sats:this.props.sats\r\n\r\n        }\r\n      )\r\n    })\r\n  }\r\n\r\n  initRules = () => {\r\n    this.setState(\r\n      () => {\r\n        let ruleArr = []\r\n        for (let i = 0; i < 8; i++) {\r\n          ruleArr[i] = Math.floor(Math.random()*2)\r\n        }\r\n        return(\r\n          {\r\n            rules: ruleArr\r\n          }\r\n        )\r\n      }\r\n    )\r\n  }\r\n\r\n  onWindowResize = (p5) => {\r\n    p5.resizeCanvas(p5.windowWidth,p5.windowHeight)\r\n  }\r\n\r\n  calcNil = () => {\r\n    this.setState( prevState => {\r\n      const boxNum = this.state.boxNum\r\n      const fil = [...prevState.fil]\r\n      const nil = []\r\n      const rules = this.state.rules\r\n      nil[0] = rules[4*fil[boxNum-1]+2*fil[0]+fil[1]]\r\n      nil[boxNum-1] = rules[(4*fil[boxNum-2]+fil[boxNum-1]+fil[0])]\r\n      for (let i = 1; i < fil.length-1; i++) {\r\n        nil[i] = rules[(4*fil[i-1]+2*fil[i]+fil[i+1])]\r\n      }\r\n      return(\r\n        {\r\n          fil: nil\r\n        }\r\n      )\r\n    })\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Sketch setup={this.setup} draw={this.draw} windowResized={this.onWindowResize}/>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default P5Sketch","import React, { Component } from 'react';\nimport './App.css';\nimport P5Sketch from './P5Sketch.js';\nimport splashCard from './img/bsSplashCard.png'\n\nclass App extends Component {\n\n  constructor(props) {\n      super(props);\n      this.state = {\n        rules: [1,0,1,1,0,1,1,0],\n        hues: [0,30,60,90,120,150,180,210],\n        sats: [100,100,100,100,20,30,40,50]\n      };\n      this.changeBlur = this.changeBlur.bind(this)\n      this.changePattern = this.changePattern.bind(this)\n      setInterval(this.changeBlur,10000)\n  }\n\n  changeBlur(e) {\n    if (this.state.isBlur){\n      document.getElementById('LiveBackDrop').style.filter = 'blur(0px)';\n    }\n    else {\n      document.getElementById('LiveBackDrop').style.filter = 'blur(6px)';\n    }\n    this.setState(\n      prevState => ({\n        isBlur: !(prevState.isBlur)\n      })\n    )\n    \n  }\n\n  onHover(e) {\n\n  }\n\n  changePattern(e) {\n   this.setState(\n      () => {\n        let ruleArr = []\n        let hueArr = []\n        let satArr = []\n        for (let i = 0; i < 8; i++) {\n          ruleArr[i] = Math.floor(Math.random()*2)\n          hueArr[i] = Math.floor(Math.random()*360)\n          satArr[i] = Math.floor(Math.random()*100)\n        }\n        return(\n          {\n            rules: ruleArr,\n            hues: hueArr,\n            sats: satArr\n          }\n        )\n      }\n    )\n  }\n\n  \n\n    \n  render() {\n    return(\n      <div  id='App'>          \n\n        <div id='LiveBackDrop' className=\"LiveBackDrop\" onMouseMove={this.handleMouseMove}>\n          <P5Sketch canvasParentRef='LiveBackDrop' sats={this.state.sats} rules={this.state.rules} hues={this.state.hues}/>   \n        </div> \n\n        <div id = 'UI' className=\"UI\">\n          {/* <button onClick={this.changeBlur} onHover={this.onHover}>\n            Blur\n          </button>  \n          <button onClick={this.changePattern}>\n            Pattern\n          </button>   */}\n          <div className=\"splashCard\"> \n            <img src={splashCard} onClick={this.changePattern} alt=\"title card of site\" />\n          </div>\n        </div>  \n        \n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}